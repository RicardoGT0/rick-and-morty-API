-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Character"
(
    id serial,
    name text,
    status text,
    species integer,
    gender text,
    image text,
    location integer,
    origin integer,
    type text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.origin
(
    id serial,
    name text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.location
(
    id serial,
    name text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.episode
(
    id_character integer,
    num_episode integer
);

CREATE TABLE IF NOT EXISTS public.species
(
    id serial,
    name text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id serial,
    "userName" text NOT NULL,
    password text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.favorite
(
    user_id serial,
    "Charcter_id" serial
);

ALTER TABLE IF EXISTS public."Character"
    ADD CONSTRAINT species FOREIGN KEY (species)
    REFERENCES public.species (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Character"
    ADD CONSTRAINT location FOREIGN KEY (location)
    REFERENCES public.location (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Character"
    ADD CONSTRAINT origin FOREIGN KEY (origin)
    REFERENCES public.origin (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.episode
    ADD FOREIGN KEY (id_character)
    REFERENCES public."Character" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.favorite
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.favorite
    ADD FOREIGN KEY ("Charcter_id")
    REFERENCES public."Character" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;